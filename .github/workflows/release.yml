name: Release

on:
  workflow_dispatch:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
    - master

    # Publish `v1.2.3` tags as releases.
    tags:
    - v*

env:
  PODMAN_IMAGE: podman
  PODMAN_MINIMAL_IMAGE: podman-minimal
  PODMAN_REMOTE_IMAGE: podman-remote

jobs:
  push:
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      actions: write
      contents: write
      packages: write

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up qemu
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Print environment
      run: |
        uname -a
        docker --version

    - name: Build & test
      run: make images test

    - name: Build signed archives
      run: make clean singlearch-tar TAR_TARGET=signed-tar
      env:
        GPG_SIGN_KEY: ${{ secrets.GPG_SIGN_KEY }}
        GPG_SIGN_KEY_PASSPHRASE: ${{ secrets.GPG_SIGN_KEY_PASSPHRASE }}

    - name: Log into GitHub registry
      run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Push images
      run: |
        set -eu

        GITHUB_IMAGE_REPO=ghcr.io/bitdeps/podman
        GITHUB_IMAGE_REPO=$(echo $GITHUB_IMAGE_REPO | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        TAGS=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "$GITHUB_REF" == "refs/tags/v"* ]] && TAGS=$(echo $TAGS | sed -e 's/^v//')
        # Expand tags: 1.2.3 -> 1 1.2 1.2.3
        TAGS="$(echo "$TAGS" | sed -E -e 's/^((([0-9]+)\.[0-9]+)\.[0-9]+)$/\3 \2 \1/')"

        for IMAGE in $PODMAN_REMOTE_IMAGE $PODMAN_IMAGE $PODMAN_MINIMAL_IMAGE; do
          TAG_SUFFIX=$(echo $IMAGE | sed -E -e 's/^([^-]+)//')
          LATEST_TAG="$([ "$TAG_SUFFIX" ] && echo $TAG_SUFFIX | sed -E -e 's/^-//' || echo latest)"
          [ "$TAGS" == "master" ] && IMAGE_TAGS="$LATEST_TAG" || IMAGE_TAGS="$LATEST_TAG $TAGS"
          TAG_OPTS=
          printf 'Pushing image tags: '
          for TAG in $IMAGE_TAGS; do
            [ "$TAG" = "$LATEST_TAG" ] || TAG="${TAG}${TAG_SUFFIX}"
            TAG_OPTS="$TAG_OPTS -t $GITHUB_IMAGE_REPO:$TAG"
            printf ' %s' "$TAG"
          done
          echo
          echo "Pushing $IMAGE image to $GITHUB_IMAGE_REPO"
          make "$IMAGE" PODMAN_BUILD_OPTS="$TAG_OPTS" PODMAN_MINIMAL_BUILD_OPTS="$TAG_OPTS" PODMAN_REMOTE_BUILD_OPTS="$TAG_OPTS"
        done
      env:
        BUILDX_OUTPUT: type=registry
        PLATFORM: linux/amd64
        GITHUB_REF: ${{ github.ref }}

    - name: Lookup if the release exists
      uses: cardinalby/git-get-release-action@v1
      if: startsWith(github.ref, 'refs/tags/')
      id: existing-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        doNotFailIfNotFound: true

    - name: Create github release (only version once)
      uses: ncipollo/release-action@v1
      if: steps.existing-release.outputs.id == ''
      id: release

    - name: Upload release assets
      uses: alexellis/upload-assets@0.4.0
      if: steps.existing-release.outputs.id != '' || steps.release.outputs.id != ''
      with:
        asset-paths: |
          ["./build/asset/podman-linux-*.tar.gz", "./build/asset/podman-linux-*.tar.gz.asc"]
